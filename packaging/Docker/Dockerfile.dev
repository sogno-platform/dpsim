FROM fedora:36 AS base

ARG CIM_VERSION=CGMES_2.4.15_16FEB2016
ARG CIMPP_COMMIT=1b11d5c17bedf0ae042628b42ecb4e49df70b2f6
ARG VILLAS_VERSION=18cdd2a6364d05fbf413ca699616cd324abfcb54

ARG CMAKE_OPTS
ARG MAKE_OPTS=-j4

LABEL \
	org.opencontainers.image.title="DPsim" \
	org.opencontainers.image.licenses="MPL 2.0" \
	org.opencontainers.image.url="http://dpsim.fein-aachen.org/" \
	org.opencontainers.image.source="https://github.com/sogno-platform/dpsim"

RUN dnf -y update

# Toolchain
RUN dnf -y install \
	gcc gcc-c++ clang \
	git \
	rpmdevtools rpm-build \
	make cmake pkgconfig \
	python3-pip \
	cppcheck

# Tools needed for developement
RUN dnf -y install \
	doxygen graphviz \
	gdb \
	procps-ng

# Dependencies
RUN dnf --refresh -y install \
	python3-devel \
	eigen3-devel \
	libxml2-devel \
	graphviz-devel \
	spdlog-devel \
	fmt-devel

# Install some debuginfos
RUN dnf -y debuginfo-install \
	python3

# Build & Install sundials
RUN cd /tmp && \
	git clone --branch v7.1.1 --recurse-submodules --depth 1 https://github.com/LLNL/sundials.git && \
	mkdir -p sundials/build && cd sundials/build && \
	cmake ${CMAKE_OPTS} .. \
		-DCMAKE_BUILD_TYPE=Release && \
	make ${MAKE_OPTS} install

# CIMpp and VILLASnode are installed here
ENV LD_LIBRARY_PATH="/usr/local/lib64:${LD_LIBRARY_PATH}"

# Install minimal VILLASnode dependencies
RUN dnf -y install \
	openssl-devel \
	libuuid-devel \
	libcurl-devel \
	jansson-devel \
	libwebsockets-devel

# Install optional VILLASnode dependencies
RUN dnf -y install \
	mosquitto-devel \
	libconfig-devel \
	libnl3-devel \
	protobuf-devel \
	protobuf-c-devel

# Python dependencies
ADD requirements.txt .
RUN pip3 install --upgrade wheel build setuptools
RUN pip3 install -r requirements.txt

# Install CIMpp from source
RUN cd /tmp && \
	git clone https://github.com/sogno-platform/libcimpp.git && \
	mkdir -p libcimpp/build && cd libcimpp/build && \
	git checkout ${CIMPP_COMMIT} && \
	git submodule update --init && \
	cmake ${CMAKE_OPTS} ..\
		-DBUILD_SHARED_LIBS=ON \
		-DCMAKE_INSTALL_LIBDIR=/usr/local/lib64 \
		-DUSE_CIM_VERSION=${CIM_VERSION} \
		-DBUILD_ARABICA_EXAMPLES=OFF && \
	make ${MAKE_OPTS} install && \
	rm -rf /tmp/libcimpp

# Install VILLASnode from source
RUN cd /tmp && \
	git clone --recurse-submodules https://github.com/VILLASframework/node.git villas-node && \
	mkdir -p villas-node/build && cd villas-node/build && \
	git checkout ${VILLAS_VERSION} && \
	cmake ${CMAKE_OPTS} .. \
		-DCMAKE_INSTALL_LIBDIR=/usr/local/lib64 \
		-DDOWNLOAD_GO=OFF && \
	make ${MAKE_OPTS} install && \
	rm -rf /tmp/villas-node

# Remove this part in the future and use dedicated Jupyter Dockerfile
# Activate Jupyter extensions
RUN dnf -y --refresh install \
	npm

RUN pip3 install \
	jupyter \
	jupyterlab \
	jupyter_contrib_nbextensions \
	nbconvert \
	nbformat

EXPOSE 8888

# Target for vscode dev container
FROM base AS dev-vscode

# Create a non-root user for vscode to use
ARG USERNAME=dpsim
ARG USER_UID=1000
ARG USER_GID=$USER_UID

RUN groupadd --gid $USER_GID $USERNAME && \
	useradd --uid $USER_UID --gid $USER_GID -m $USERNAME && \
	echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME && \
	chmod 0440 /etc/sudoers.d/$USERNAME

FROM base
